.\" -*- nroff -*-
.TH STAPPROBES.NFSD 3stap "" "IBM"
.SH NAME
stapprobes.nfsd \- systemtap NFS server side probe points

.\" macros
.de SAMPLE
.br
.RS
.nf
.nh
..
.de ESAMPLE
.hy
.fi
.RE
..

.SH DESCRIPTION

This family of probe points is used to probe NFS activities on 
server side.  Because there is only one function, i.e., nfsd4_proc_compound
in proc level for NFSv4, all the following nfsd.proc probe points except 
nfsd.proc.compound are only for NFSv2 and NFSv3.

It contains the following probe points:

.P
.TP
.B nfsd.proc.lookup

Fires whenever client opens/searches file on server

.B Arguments:

.I client_ip 
  the ip address of client

.I proto 
  transfer protocol

.I version 
  nfs version

.I fh 
  the pointer to file handler of parent dir

.I filename
  file name

.I filelen
  the length of file name 

.P
.TP
.B nfsd.proc.read

Fires whenever client reads file on server 

.B Arguments:

.I client_ip 
  the ip address of client

.I proto 
  transfer protocol

.I version 
  nfs version

.I fh 
  the pointer to file handler of file 

.I count,size 
  number of bytes to be read

.I offset 
  the offset of file

.I vec
  struct kvec, includes buf address in kernel address
  and the length of each buffer

.I vlen 
  number of blocks to be read 

.P
.TP
.B nfsd.proc.write

Fires whenever client writes data to file on server 

.B Arguments:

.I client_ip 
  the ip address of client

.I proto 
  transfer protocol

.I version 
  nfs version

.I fh 
  the pointer to file handler of file 

.I count,size 
  number of bytes to written 

.I offset 
  the offset of file

.I vec
  struct kvec, includes buf address in kernel address
  and the length of each buffer

.I vlen 
  number of blocks to written 

.I stable 
   argp\->stable(only for nfs.proc3.write)

.P
.TP
.B nfsd.proc.commit

Fires whenever client does a commit operation 

.B Arguments:

.I client_ip 
  the ip address of client

.I proto 
  transfer protocol

.I version 
  nfs version

.I fh 
  the pointer to file handler of file 

.I count,size 
  number of bytes to written 

.I offset 
  the offset of file

.P
.TP
.B nfsd.proc.create

Fires whenever client creates a file on server

.B Arguments:

.I client_ip 
  the ip address of client

.I proto 
  transfer protocol

.I version 
  nfs version

.I fh 
  the pointer to file handler of parent dir 

.I filename
  file name

.I filelen
  the length of file name 

.P
.TP
.B nfsd.proc.remove

Fires whenever client removes a file on server

.B Arguments:

.I client_ip 
  the ip address of client

.I proto 
  transfer protocol

.I version 
  nfs version

.I fh 
  the pointer to file handler of file 

.I filename
  file name

.I filelen
  the length of file name 

.P
.TP
.B nfsd.proc.rename

Fires whenever client renames a file on server

.B Arguments:

.I client_ip 
  the ip address of client

.I proto 
  transfer protocol

.I version 
  nfs version

.I fh 
  the pointer to file handler of old path

.I tfh 
  the pointer to file handler of new path

.I filename
  old file name

.I tname
  new file name

.I filelen
  the length of old file name 

.I tlen
  the length of new file name 

.P
.TP
.B nfsd.proc.compound

Fires whenever server receives a NFSV4 operation from client

.B Arguments:

.I client_ip 
  the ip address of client

.I proto 
  transfer protocol

.I version 
  nfs version

.I num
  number of file operation  

.I op
  head of operation list

.P
.TP
.B nfsd.open

Fires whenever server opens file

.B Arguments:

.I fh
   file handle (the first part is the length of the file handle)

.I access
  type of open (read/write/commit/readdir...)

.I type
  type of file(regular file or dir)

.P
.TP
.B nfsd.read

Fires whenever server reads file

.B Arguments:

.I fh
   file handle (the first part is the length of the file handle)

.I file
   argument :file, indicates if the file has been opened.

.I count,size 
  number of bytes to be read

.I offset 
  the offset of file

.I vec
  struct kvec, includes buf address in kernel address
  and the length of each buffer

.I vlen 
  number of blocks to be read 

.P
.TP
.B nfsd.write

Fires whenever server writes file

.B Arguments:

.I fh
   file handle (the first part is the length of the file handle)

.I file
   argument :file, indicates if the file has been opened.

.I count,size 
  number of bytes to be read

.I offset 
  the offset of file

.I vec
  struct kvec, includes buf address in kernel address
  and the length of each buffer

.I vlen 
  number of blocks to be written 

.P
.TP
.B nfsd.commit

Fires when server commits all pending writes to stable storage

.B Arguments:

.I fh
  file handle (the first part is the length of the file handle)

.I count,size 
  number of bytes to be read

.I offset 
  the offset of file

.P
.TP
.B nfsd.lookup

Fires whenever client opens/searches file on server

.B Arguments:

.I fh
  file handle (the first part is the length of the file handle)

.I filename
  file name

.I filelen
  the length of file name

.P
.TP
.B nfsd.create

 Fires when client creates a file(regular,dir,device,fifo) on
 server side, sometimes nfsd will call nfsd_create_v3 instead 
 of this function

.B Arguments:

.I  fh  
  file handle (the first part is the length of the file handle)

.I  filename 
  file name 

.I  filelen  
  the length of file name

.I  type 
  file type(regular,dir,device,fifo ...)

.I  iap_valid
  Attribute flags

.I  iap_mode 
  file access mod

.P
.TP
.B nfsd.createv3

Fires when client creates a regular file or set file attributes
on server side, only called by nfsd3_proc_create and nfsd4_open
(op_claim_type is NFS4_OPEN_CLAIM_NULL)

.B Arguments:

.I  fh  
  file handle (the first part is the length of the file handle)

.I  filename 
  file name 

.I  filelen  
  the length of file name

.I  iap_valid 
  Attribute flags

.I  iap_mode 
  file access mode

.I  createmode 
  create mode. The possible values could be:
    NFS3_CREATE_EXCLUSIVE,NFS3_CREATE_UNCHECKED,NFS3_CREATE_GUARDED

.I  truncp 
  trunp arguments, indicates if the file should be truncated

.I  verfier 
  file attributes (atime,mtime,mode). It's used to reset file
  attributes for CREATE_EXCLUSIVE

.P
.TP
.B nfsd.unlink

Fires when client removes a file or a dir  on server side,

.B Arguments:

.I  fh  
  file handle (the first part is the length of the file handle)

.I  filename 
  file name 

.I  filelen  
  the length of file name

.I  type 
  file type(file or dir)

.P
.TP
.B nfsd.rename
Fires when clients rename a file on server side

.B Arguments:

.I fh 
  file handler of old path

.I tfh 
  file handler of new path

.I filename 
  old file name 

.I tname 
  new file name

.I flen 
  length of old file name 

.I tlen 
  length of new file name

.P
.TP
.B nfsd.close

Fires whenever server closes file

.B Arguments:

.I filename
  file name

.P
.TP
.B nfsd.dispatch

Fires whenever server receives NFS operation from client

.B Arguments:

.I client_ip 
  the ip address of client

.I proto 
  transfer protocol

.I version 
  nfs version

.I xid 
  transmission id

.I prog 
  program number

.I proc 
  procedure number

.SH SEE ALSO
.IR stap (1),
.IR stapprobes (3stap)

