.\" -*- nroff -*-
.TH TAPSET::IRQ 3stap "" "IBM"
.SH NAME
tapset::irq \- Systemtap probes for IRQ, workqueue,etc

.\" macros
.de SAMPLE
.br
.RS
.nf
.nh
..
.de ESAMPLE
.hy
.fi
.RE
..

.SH DESCRIPTION

Probe points for probing irq handler execution, softirqs, workqueues,etc

.P
.TP
.B workqueue.create
probes creation of a new workqueue

.B Arguments:

.I wq_thread
   task_struct of the workqueue thread.

.I cpu
   cpu for which the worker thread is created.

.P
.TP
.B workqueue.insert
probes queuing of work on a workqueue.

.B Arguments:

.I wq_thread
   task_struct of the workqueue thread.

.I work
   work_struct* being executed.

.I work_func
   pointer to handler func.

.P
.TP
.B workqueue.execute
probes execution of deferred work.

.B Arguments:

.I wq_thread
   task_struct of the workqueue thread.

.I work
   work_struct* being executed.

.I work_func
   pointer to handler func.

.P
.TP
.B workqueue.destroy
probes destruction of each worker thread of each cpu for a workqueue.

.B Arguments:

.I wq_thread
  task_struct of the workqueue thread.

.P
.TP
.B irq_handler.entry
Fires prior to execution of interrupt handler.

.B Arguments:

.I irq
   irq number

.I action
   struct irqaction* for this interrupt number

.I handler
   interrupt handler function

.I flags
   flags for this irq.

.I flags_str
   A formatted string of flags.

.I dev_name
   name of device

.I dev_id
   cookie to identify device

.I next_irqaction
   pointer to next irqaction for shared interrupts

.I dir
   pointer to the /proc/irq/NN/name entry

.I thread_fn
   interrupt handler function for threaded interrupts

.I thread
   thread pointer for threaded interrupts

.I thread_flags
   flags related to thread

.P
.TP
.B irq_handler.exit
Fires post execution of interrupt handler.

.B Arguments:

.I irq
   irq number

.I action
   struct irqaction* for this interrupt number

.I ret
   return value from interrupt handler that just executed.

.I handler
   interrupt handler function

.I flags
   flags for this irq.

.I flags_str
   A formatted string of flags.

.I dev_name
   name of device

.I dev_id
   cookie to identify device

.I next_irqaction
   pointer to next irqaction for shared interrupts

.I dir
   pointer to the /proc/irq/NN/name entry

.I thread_fn
   interrupt handler function for threaded interrupts

.I thread
   thread pointer for threaded interrupts

.I thread_flags
   flags related to thread

.P
.TP
.B softirq.entry
triggered just before executing handler for a pending softirq

.B Arguments:

.I h
   struct softirq* for current pending softirq.

.I vec
   softirq_action vector

.I action
   pointer to softirq handler just about to execute.

.P
.TP
.B softirq.exit
triggered just after executing handler for a pending softirq

.B Arguments:

.I h
   struct softirq* for just executed softirq.

.I vec
   softirq_action vector

.I action
   pointer to softirq handler that just finished execution.

.SH SEE ALSO
.IR stap (1),
.IR stapprobes (3stap)
